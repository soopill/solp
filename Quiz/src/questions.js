export default [
  {
    id: "q1",
    text: "다음 중 React.js를 가장 잘 설명하는 정의는 무엇인가요?",
    answers: [
      "선언적 코드를 사용하여 사용자 인터페이스를 구축하는 라이브러리입니다.",
      "웹 애플리케이션에서 상태를 관리하는 라이브러리입니다.",
      "명령적 코드를 사용하여 사용자 인터페이스를 구축하는 프레임워크입니다.",
      "모바일 애플리케이션을 구축하는 데만 사용되는 라이브러리입니다.",
    ],
  },
  {
    id: "q2",
    text: "React 훅의 목적은 무엇인가요?",
    answers: [
      "함수형 컴포넌트에서 상태와 다른 React 기능을 사용할 수 있게 합니다.",
      "React 애플리케이션에서 반응형 레이아웃을 만듭니다.",
      "애플리케이션 내에서 오류를 처리합니다.",
      "전역 상태를 관리하기 위한 Redux 라이브러리의 일부입니다.",
    ],
  },
  {
    id: "q3",
    text: "JSX가 무엇인지 설명할 수 있나요?",
    answers: [
      "JavaScript에 HTML과 유사한 문법을 추가하는 JavaScript 확장입니다.",
      "동적인 사용자 인터페이스를 구축하기 위한 JavaScript 라이브러리입니다.",
      "React를 위해 특별히 생성된 HTML 버전입니다.",
      "React 애플리케이션에서 HTTP 요청을 만드는 도구입니다.",
    ],
  },
  {
    id: "q4",
    text: "React에서 컴포넌트를 만드는 가장 일반적인 방법은 무엇인가요?",
    answers: [
      "렌더링 가능한 값을 반환하는 JavaScript 함수를 정의하는 것입니다.",
      "JavaScript에서 사용자 정의 HTML 태그를 정의하는 것입니다.",
      "파일 확장자가 .jsx인 파일을 생성하는 것입니다.",
      '"new" 키워드를 사용하여 컴포넌트 이름을 작성하는 것입니다.',
    ],
  },
  {
    id: "q5",
    text: '"React 상태"라는 용어는 무엇을 의미하나요?',
    answers: [
      "컴포넌트 내에서 값을 보유하고, 변경 시 컴포넌트가 다시 렌더링되게 하는 객체입니다.",
      "React 컴포넌트의 라이프사이클 단계입니다.",
      "모든 props와 컴포넌트를 포함하는 React 애플리케이션의 전체 상태입니다.",
      "React 애플리케이션에서 전역 상태를 관리하는 라이브러리입니다.",
    ],
  },
  {
    id: "q6",
    text: "React 애플리케이션에서 목록 내용을 렌더링하는 일반적인 방법은 무엇인가요?",
    answers: [
      "map() 메서드를 사용하여 데이터 배열을 순회하고 JSX를 반환합니다.",
      "for() 루프를 사용하여 데이터 배열을 순회하고 JSX를 반환합니다.",
      "forEach() 메서드를 사용하여 데이터 배열을 순회하고 JSX를 반환합니다.",
      "loop() 메서드를 사용하여 데이터 배열을 순회하고 JSX를 반환합니다.",
    ],
  },
  {
    id: "q7",
    text: "조건부 렌더링에 사용할 수 없는 방법은 무엇인가요?",
    answers: [
      "if 템플릿 구문을 사용하는 방법입니다.",
      "삼항 연산자를 사용하는 방법입니다.",
      "&& 연산자를 사용하는 방법입니다.",
      "if-else 문을 사용하는 방법입니다.",
    ],
  },
];
